% ЭЛЕКТРОННЫЙ  ЗАДАЧНИК  ПО  ЛОГИЧЕСКОМУ  ПРОГРАММИРОВАНИЮ.
% Версия 1.0 для системы PROLOGUS
%
%                   Copyright (С) 1993  Боголюбов Д.П. (МИЭМ).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%               У Р О К    8
%       Рекурсивная обработка списков
%               Ч А С Т Ь   1
%     тема: Принадлежность элемента списку
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% На   этом   уроке   мы   изучим   различные    способы
% представления списков. Списки бывают  двух  видов:  пустой
% список и непустой. Как вы догадываетесь, третьего не дано.
% Пустой список обозначается в виде  [], не пустой, например,
% следующим  образом: 
%
%         [1,2,_X,as,_X].
%
% Такой  список  обозначает  упорядоченное множество из пяти
% элементов, первые два из которых  -  числа 1 и 2, четвертый
% - символьная константа  as, а третий  и  пятый элементы -
% переменные. Заметим, что при выполнении операции сопоставления
% вместо  такой  переменной  может  быть подставлен  любой
% другой тип данных: число, строка, структура или же другой
% список.  
%
% Существует и другая форма записи для списка: [_X|_Y].
% Здесь _Х обозначает голову списка (его первый элемент), а _Y - его
% хвост (список, состоящий из всех его оставшихся элементов, кроме 
% первого). Таким образом список из нашего примера будет выглядеть
% так: [1|[2,_X,as,_X]]. 
%
% В свою очередь, хвост также можно разбить на две части.
% В итоге, исходный список будет эквивалентен следующему:
%
%   [1|[2|[_X|[as|[_X|[]]]]]].
%
% Пустой список на голову и хвост разбить невозможно.         
%
% Использование списков совместно с применением рекурсии
% является очень мощным средством решения задач на Прологе.
%
% Рассмотрим, например, задачу определения принадлежности
% элемента списку.
%
% Эту задачу можно сформулировать следующим образом:
%   _X принадлежит списку _L, если 
%    1) _X есть голова _L, либо
%    2) _X принадлежит хвосту _L.
%
    принадлежит(_X,[_X|_L]).

    принадлежит(_X,[_Голова|_Хвост]):-принадлежит(_X,_Хвост).
%
% Предикат принадлежит ищет первый совпадающий с _Х элемент в
% списке. Если такого элемента нет, то рекурсия заканчивается по 
% достижению пустого списка.
%
% Например запустите следующий вопрос:
% (Нажмите Alt и $, а затем F9 )

$ ?-ТРАС,принадлежит(си,[до,ре,ми,фа,соль,ля,си,до]).

% Встроенный предикат ТРАС выводит на экран процесс выполнения
% программы.
%    
% С помощью этой программы можно также вывести на  экран  все
% элементы данного списка. Например:
% 
                                          
   ?-принадлежит(_X,[1,2,3,5,10,4,сто]).

% Для запуска задайте режим поиска всех решеий с помощью меню,
% после чего нажмите Alt и $, затем Alt и @, затем F9.
% ----------------------------------------------------------------
%     Самостоятельное задание
%
% Напишите программу, "склеивающую" два списка. Например, если
% даны списки [1,2,3] и [3,8], то должен получиться список [1,2,3,3,8].
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  Конец  Части 1  Урока 8.
%  Загрузите файл  PR8_2.PRO ( Часть 2 Урока 8 )
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                                                  
