% ЭЛЕКТРОННЫЙ  ЗАДАЧНИК  ПО  ЛОГИЧЕСКОМУ  ПРОГРАММИРОВАНИЮ.
% Версия 1.0 для системы PROLOGUS
%
%                   Copyright (С) 1993  Боголюбов Д.П. (МИЭМ).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%               У Р О К    1
%        Базы знаний без альтернатив
%               Ч А С Т Ь   2
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Итак, в первой части урока была создана следующая база
% данных:

  рвется(Лебедь,в_облака).
  пятится(Рак,назад).
  тянет(Щука,в_воду).

% и были рассмотрены вопросы типа ?-пятится(Рак,назад);

% Следующий тип вопросов, которые можно задавать к таким
% базам данных - специальные вопросы типа: "Кто пятится назад?" 
% или "Кто куда тянет?". На Прологе первый вопрос выглядит 
% следующим образом:

$      ?-пятится(_X,назад).

% Такие вопросы задаются с использованием переменной,
% которой можно сопоставить любое значение. 
% (Синтаксически переменные обозначаются строкой из букв или
% цифр, которой предшествует символ  подчеркивания _
% Например: _Переменная  _X1   _who   _12 )

% Поиск ответа производится следующим образом:
%
%             ?-пятится ( _X , назад)
%                 |        |     |   
%               пятится ( Рак, назад)
%
% Сопоставление пройдет успешно только в том случае, если _Х
% примет значение Рак. Поэтому, запустив вопрос на выполнение,
% вы получите единственный ответ _Х = Рак. (Перед запуском вам
% необходимо нажать Alt и $)  
%    
% А если, например, мы зададим вопрос (перед запуском вам
% необходимо нажать Alt и $,а затем Alt и &, F9)
%
& ?-рвется(_X,в_воду).
%
% то получим, очевидно, ответ НЕТ
% 
%             ?-рвется (_Х  ,  в_воду)
%                 |       |        ┼
%               рвется (Лебедь,в_облака) 
%
% поскольку единственным фактом программы с именем рвется 
% является факт рвется(Лебедь,в_облака). Сопоставление первого
% аргумента проходит успешно, поскольку _Х может принимать
% любые значения и Лебедь, в частности, а вот вторые аргументы
% являются несопоставимыми. 

% Пролог пытается найти другие варианты, но других
% предложений с именем "рвется" нет. Поэтому цель получает
% значение ЛОЖЬ и окончательный ответ - отрицательный.
%
% Вторым типом предложений программы, помимо фактов, являются
% правила. Примером правила может  являться, например, 
% следующая запись:

  находится(воз,ныне,там) :- рвется(Лебедь,в_облака),
                             пятится(Рак,назад),
                             тянет(Щука,в_воду).

% Она читается по-русски следующим образом:"Воз находится
% ныне там, если Лебедь рвется в облака, Рак пятится назад,
% и Щука тянет в воду.

% Идея использования правил заключается в том, что его левая
% часть является истинной в том и только том случае, когда 
% истинными являются все подцели из правой части. В данном
% примере цель находится(воз,ныне,там) выполнена, если
% выполнены одновременно все три подцели: рвется(Лебедь,
% в_облака), пятится(Рак,назад) и тянет(Щука,в_воду).   
%               
% Рассмотрим логический вывод ответа на вопрос

%       ?-находится(воз,ныне,там).
%
%                     ?-находится(воз,ныне,там)
%                          |      |    |   |
%                      находится(воз,ныне,там)
%                                  ║
%           ╔══════════════════════╬══════════════════════╗
%           ║                      ║                      ║
% рвется(Лебедь,в_облака)  пятится(Рак,назад)   тянет(Щука,в_воду)
%   |       |       |         |     |    |        |     |     |
% рвется(Лебедь,в_облака)  пятится(Рак,назад)   тянет(Щука,в_воду)
%   ( факт )                   ( факт )             ( факт )
%
% Поиск ответа на вопрос приводит к сопоставлению вопроса
% с левой частью правила: сначала сопоставляется имя предиката
% вопроса с именем правила, затем происходит унификация аргументов
% этих предикатов, которая также проходит успешно.  
% Но цель примет значение ИСТИНА только в том случае, если все
% три подцели в правой части правила примут значение ИСТИНА.
% Пролог начинает просматривать подцели в порядке слева направо.
% В данном случае все три предиката успешно унифицировались с
% соответствующими фактами базы. И ответом на вопрос будет ДА.
%
% К правилам также можно задавать специальные вопросы.
% Например, вопрос: "Что находится где и когда?"

@   ?-находится(_Что,_Когда,_Где). 

% Дерево вывода, очевидно, будет следующим:
%
%                   ?-находится(_Что,_Когда,_Где)
%                          |      |     |     |
%                      находится(воз, ныне,  там)
%                                  ║
%           ╔══════════════════════╬══════════════════════╗
%           ║                      ║                      ║
% рвется(Лебедь,в_облака)  пятится(Рак,назад)   тянет(Щука,в_воду)
%   |       |       |         |     |    |        |     |     |
% рвется(Лебедь,в_облака)  пятится(Рак,назад)   тянет(Щука,в_воду)
%
% Нажмите на клавиши Alt и &, затем Alt и @, после чего запустите 
% программу на выполнение клавишей F9.
% Проверьте, какой ответ получился.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  Конец  Урока 1.
%  Загрузите файл  PR2_1.PRO ( Часть 1 Урока 2)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

