% ЭЛЕКТРОННЫЙ  ЗАДАЧНИК  ПО  ЛОГИЧЕСКОМУ  ПРОГРАММИРОВАНИЮ.
% Версия 1.0 для системы PROLOGUS
%
%                   Copyright (С) 1993  Боголюбов Д.П. (МИЭМ).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%               У Р О К    8
%      Рекурсивная обработка списков.
%               Ч А С Т Ь   2
%             тема: Палиндромы.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% На этом уроке мы решим еще одну задачу, связанную со 
% списками. 
%
% Палиндромом называется слово или выражение, которое 
% одинаково читается как справа налево, так и слева направо.
% Примеры палиндромов:

%   А роза упала на лапу Азора.  (А.Фет)
%   Я иду с мечем, судия.
%   Огонь - лоб больного !
%   Отчаян я, а что ?
%   Чин зван мечем навзничь. (В.Хлебников)
%
% Задача заключается в том, чтобы определить,  является ли 
% данное слово или предложение палиндромом или нет.
%
% Для представления слов в Прологе весьма удобно пользоваться
% списками соответствующих букв. Так, слово "ПРОЛОГ" представится
% в виде ["П","Р","О","Л","О","Г"].
% Теперь попробуем свести задачу к рекурсивной формулировке.
% Что значит, что список является палиндромом? Это значит,
% во-первых, что его первый и последний элементы совпадают и,
% во-вторых, список, который останется после удаления этих двух
% элементов также является палиндромом.
%     
% Посмотрим, что произойдет при попытке проверить, является ли
% слово ["П","О","Т","О","П"] палиндромом. На первом шаге произойдет
% проверка на равенство первой буквы  и последней. Затем будет 
% выяснено, является ли ["О","Т","О"] палиндромом, что сведется к 
% нахождению ответа на вопрос, является ли ["Т"] палиндромом.

% Но здесь программа не сможет дать правильного решения, 
% поскольку в списке, состоящем из одного элемента, выделить первый,
% последний элементы, да еще и середину невозможно.
%
% Для того, чтобы программа работала корректно, необходимо,
% чтобы существовал выход из рекурсии, то есть факт или правило,
% после которого рекурсивная обработка заканчивается.       
%
% В случае, если в слове четное число букв, то выходом из рекурсии
% явится факт 

  палиндром([]).
%
% В случае нечетного числа букв:
%    
  палиндром([_СредняяБуква]).
%
% Непосредственно правило палиндром можно представить следующим
% образом
%
  палиндром([_Первый|_Остальные]):-слияние(_Середина,[_Первый],_Остальные),
                                  палиндром(_Середина).

%
% В этом правиле используется предикат для определения слияния
% двух списков. Эта задача должна была быть вами решена в предыдущей
% части. Для полноты картины приводим ее решение:
%     
%
%
   слияние([],_L,_L).
   слияние([_X|_L1],_L2,[_X|_L3]):-слияние(_L1,_L2,_L3).
%
% Попытаемся теперь выяснить, является ли слово "ротатор" 
% палиндромом:
%     
   ?-палиндром([р,о,т,а,т,о,р]).          
%
% --------------------------------------------------------------
%      Самостоятельное задание
%
% Напишите программу обращения списка, то есть по заданному
% списку получите новый, в котором все элементы располагаются в 
% обратном порядке. После этого перепишите правило для палиндрома, 
% используя написанное правило.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  Конец  Части 2  Урока 8.
%  Загрузите файл  PR8_3.PRO ( Часть 3 Урока 8 )
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

