% ЭЛЕКТРОННЫЙ  ЗАДАЧНИК  ПО  ЛОГИЧЕСКОМУ  ПРОГРАММИРОВАНИЮ.
% Версия 1.0 для системы PROLOGUS
%
%                   Copyright (С) 1993  Боголюбов Д.П. (МИЭМ).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%               У Р О К    2
%       Базы знаний с альтернативами
%               Ч А С Т Ь   2
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Напомним, что в первой части этого урока мы написали
% следующую программу:

  играет(Мартышка,скрипка).
  играет(Козел,скрипка).
  играет(Осел,альт). 
  играет(Мишка,бас). 
  
% Теперь пришла очередь описать сам квартет. По правилам
% музыкальных оркестров, квартет состоит из двух скрипок, альта
% и контрабаса.

$       квартет(_X1,_X2,_X3,_X4):-
$                  играет(_X1,скрипка),играет(_X2,скрипка),
$                  играет(_X3,альт),играет(_X4,бас).
     
% Это правило гласит, что четыре лица составляют квартет, если
% двое из них играют на скрипке, один на альте и еще один на басе.

% Посмотрим, какие квартеты можно образовать из наших 
% горе-музыкантов. Для этого зададим следующий вопрос:

$      ?-квартет(_X,_Y,_Z,_W).

% и нарисуем для него дерево вывода.
%    
%                     ?-квартет(_X, _Y, _Z, _W )
%                          |     |   |   |   |
%                       квартет(_X1,_X2,_X3,_X4)
%                                   ║
%      ╔═════════════════╦══════════╩═══════╦═══════════════╗
%      ║                 ║                  ║               ║
% играет(_X1,скрипка)    ║                  ║        играет(_X4,бас)
%      │                 ║                  ║               │
%      │       играет(_X2,скрипка)    играет(_X3,альт)      │
%      │                        │      │                    │
%      └──────────────────────┐ │      │ ┌──────────────────┘
%                             │ │      │ │
% играет(Мартышка,скрипка) ───┤ │      │ ├─┼─ играет(Мартышка,скрипка)
% играет(Козел,скрипка)    ───┤ │      │ ├─┼─ играет(Козел,скрипка)
% играет(Осел,альт)        ─┼─┤ │      │ ├─┼─ играет(Осел,альт)
% играет(Мишка,бас)        ─┼─┘ │      │ └─── играет(Мишка,бас)
%                               │      │
% играет(Мартышка,скрипка) ─────┤      ├──┼── играет(Мартышка,скрипка)
% играет(Козел,скрипка)    ─────┤      ├──┼── играет(Козел,скрипка)
% играет(Осел,альт)        ──┼──┤      ├───── играет(Осел,альт)
% играет(Мишка,бас)        ──┼──┘      └──┼── играет(Мишка,бас)
%  
% Пролог для нахождения ответа на вопрос сначала сопоставляет
% вопрос с левой частью правила. Унификация проходит успешно,
% поскольку и там, и там аргументами являются переменные, которые
% могут принимать любые значения.
% Далее система начинает последовательно выполнять подцели из
% правой части правила.
%
% Выполнение первой подцели приводит к просмотру четырех 
% вариантов, причем первый же вариант  играет(Мартышка,скрипка)
% удовлетворяет нашей подцели. В результате _Х1 принимает 
% значение Мартышка и производится попытка выполнения второй
% подцели.

% Нигде не оговорено, что _Х1 и _Х2 должны быть различными,
% поэтому в результате первого прохода программы мы получаем ответ
% _Х=Мартышка, _Y=Мартышка, _Z=Осел и _W=Мишка.


% Предположим, что Пролог находится в режиме поиска всех решений.
% Тогда получив один ответ, система печатает его и продолжает поиск
% альтернативных решений, что в конце концов приводит к четырем 
% различным вариантам квартетов.      
% 
% Задайте режим поиска всех решений (как его задавать, рассказано в
% уроке pr2_1.prl). Запустите вопрос на выполнение (предварительно
% нажав Alt и $) и проверьте правильность сделанного вывода. Обратите
% внимание на порядок следования ответов.
%
% Правило для отношения квартет является некорректным, поскольку
% получены ответы, не соответствующие логике (одно лицо не может 
% одновременно играть на двух скрипках).

% Для того, чтобы этого не происходило, необходимо изменить
% правило следующим образом: 

@    квартет(_X1,_X2,_X3,_X4):-
@      играет(_X1,скрипка),играет(_X2,скрипка),_X1 \=_X2,
@      играет(_X3,альт),играет(_X4,бас).
@
@     ?-квартет(_X,_Y,_Z,_W).

% Теперь после того, как найдены какие нибудь значения для Х1 и Х2,
% проверяется, равны ли они между собой. Если они не равны, то
% добавленная конструкция принимает значение ИСТИНА и продолжается
% поиск значений для остальных аргументов. В противном случае 
% найденные значения Х1 и Х2 решением не являются и Пролог начинает
% просматривать другие варианты.
%
% Нажмите на клавиши Alt и $, затем на Alt и @, после чего запустите
% программу на выполнение F9 и сверьте полученные ответы.
%
% ---------------------------------------------------------------
%    Самостоятельное задание:
% 
% Напишите правило для отношения музыкант, используя следующее
% утверждение: 
%
% Некто является музыкантом, если он обладает слухом, на
% чем-нибудь играет и это что-то является инструментом.  
%
%   музыкант(_X):- ...
%    
% После этого добавьте в базу данных сведения об известных
% музыкантах, например Паганини, инструментах и задайте 
% компьютеру вопрос о том, кто является музыкантом.
% -------------------------------------------------------------
%      Указания:
%
% Если это задание покажется вам трудным выполните задание по шагам:
% определите музыканта как того, кто
% 1) умеет играть на скрипке.
% 2) имеет слух и играет на скрипке.
% 3) имеет слух и играет на инструменте, который является скрипкой.
% 4) ...(исходная задача).
% При переходе от одного этапа к другому необходимо закомментировать
% преыдущие правила о музыканте.
%
% Не забудьте ввести в базу предложения со сведениями о том,
% что является инструментом, кто имеет слух и кто на чем играет,
% перед проверкой выполнения правила о музыканте.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Самостоятельно выполните задание преподавателя.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  Конец  Урока 2.
%  Загрузите файл  PR3_1.PRO ( Часть 1 Урока 3)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

