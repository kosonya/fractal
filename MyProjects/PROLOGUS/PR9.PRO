% ЭЛЕКТРОННЫЙ  ЗАДАЧНИК  ПО  ЛОГИЧЕСКОМУ  ПРОГРАММИРОВАНИЮ.
% Версия 1.0 для системы PROLOGUS
%
%                   Copyright (С) 1993  Боголюбов Д.П. (МИЭМ).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%                У Р О К    9
%     Модификация утверждений программы. 
%           Работа с базой данных.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Встроенные предикаты asserta/1 и assert/1 позволяют добовлять 
% новые утверждения в базу данных Пролога (в начало и в конец 
% соответственно), а retract/1 - удалять утверждение, заголовок 
% которого унифицируется с аргументом.
% Часто используется предикат retractall/1, удаляющий из базы данных
% все предложения, заголовки которых унифицируются с аргументом. 
% В PROLOGUSе этот предикат не реализован, для его использования 
% необходимо добавить в базу его определение:

retractall(_X):-ВЫП(_X),retract(_X),fail.
retractall(_).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Рассмотрим пример базы данных, содержащей информацию, относящуюся
% к членам клуба: фамилию и возраст, размер членского взноса, а также 
% данные о том, уплачен ли взнос. Такие данные будут представлены
% в базе фактами в форме:
% член(_Фамилия,_Возраст,_Данные_об_уплате)

член(Иванов,15,уплачено).
член(Иванов,33,не_уплачено).
член(Хромов,40,не_уплачено).

% Размер взноса не указывается, он определяется по возрасту:

взнос(_Возраст,рублей(1)):-_Возраст<18.
взнос(_Возраст,рублей(2)):-_Возраст>=18.

% Рассмотрим некоторые операции над базой данных.

% Внести сведения о новом члене организации:

пополнить_состав(_Член):-assert(_Член).


% Выдать на терминал сведения о членстве в организации:

выдать_сведения(член(_Фамилия,_Возраст,_Данные_об_уплате)):-
    член(_Фамилия,_Возраст,_Данные_об_уплате),
    взнос(_Возраст,_Сумма),
    ВЫВОД(член(_Фамилия,_Возраст,_Сумма,_Данные_об_уплате)),ПС,
    ЛОЖЬ.
выдать_сведения(_).

% Удалить сведения о членах организации:

сократить_состав(_Член):-retractall(_Член).

% Внести данные о том, что член организации уплатил членский взнос:

запись_об_уплате(член(_Фамилия,_Возраст)):-
    retract(член(_Фамилия,_Возраст,не_уплачено)),
    assert(член(_Фамилия,_Возраст,уплачено)).

% Теперь, нажав Alt и @ мы можем, задать вопросы для пополнения 
% базы и для выдачи ее содержания:

@?-пополнить_состав(член(Пронин,45,уплачено)).
@?-пополнить_состав(член(Сидоров,27,не_уплачено)).
@?-пополнить_состав(член(Данилов,12,не_уплачено)).

@?-выдать_сведения(_).

% Внесем данные о том, что Хромов оплатил взнос и просмотрим 
% содержание всей базы  и отдельно список должников, а затем
% исключим всех,кто не уплатил взнос(Alt+$):

$?-запись_об_уплате(член(Хромов,40)),выдать_сведения(_).
$?-выдать_сведения(член(_,_,не_уплачено)).
$?-сократить_состав(член(_,_,не_уплачено)),выдать_сведения(_).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Предикат выдать_сведения/1 пример применения вынуждаемого
% возврата для получения всех возможных вариантов согласования цели.
% При этом результат, выводимый на экран, уничтожается механизмом
% возвратов из памяти программы, но его можно накапливать, используя 
% побочный эффект действия предикатов assert/1 и retract/1. Это
% накопление реализуется процедурами действия над счетчиком:

установить_счетчик(_Имя,_Начало):-
    retractall(счетчик(_Имя,_)),
    assert(счетчик(_Имя,_Начало)).

увеличить_счетчик(_Имя,_Прирост):-
    retract(счетчик(_Имя,_Значение)),
    _Новое_значение ЕСТЬ _Значение+_Прирост,
    assert(счетчик(_Имя,_Новое_значение)).

сбросить_счетчик(_Имя,_Значение):-
    retract(счетчик(_Имя,_Значение)).

% Для иллюстрации рассмотрим процедуру, посчитывающую число
% членов клуба:

подсчет_членов(член(_Фамилия,_Возраст,_Данные_об_уплате),_):-
    установить_счетчик(число_членов,0),
    член(_Фамилия,_Возраст,_Данные_об_уплате),
    увеличить_счетчик(число_членов,1),
    ЛОЖЬ.
подсчет_членов(_,_Счетчик):-
    сбросить_счетчик(число_членов,_Счетчик).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Если программа предназначена для получения ряда значений
% при помощи одного из встроенных предикатов чтения входных
% данных, то такой подход использовать уже нельзя, так как
% read/1 и другие читают новое значение только при первом 
% вызове и не делают этого при возврате. Эту трудность можно
% преодолеть, добавив в программу определение предиката
% repeat/0 - согласуемого всегда, в том числе и при возвратах:

repeat.
repeat:-repeat.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Используем этот прием для определения процедуры меню:

меню:-repeat,
      ПС,ПС,ВЫВОД('              МЕНЮ'),ПС,
      ВЫВОД('1. Сведения о членах клуба.'),ПС,
      ВЫВОД('2. Посчитать количество членов.'),ПС,
      ВЫВОД('3. Добавить запись о члене клуба.'),ПС,
      ВЫВОД('0. ВЫХОД'),ПС,ПС,
      ВЫВОД('Введите номер пункта меню'),
      ВВОДЦЕЛ(_Х),
      обработать(_Х).

% Предикат обработать/1 предназначен для организации остановки
% или повторения соответственно сделанному поьзователем выбору:

обработать(0):-!.
обработать(_Х):-пункт(_Х),ЛОЖЬ.

% пункт/1 выполняет соответствующую операцию

пункт(1):-ПС,ВЫВОД('Состав клуба:'),
          ПС,выдать_сведения(_),!.
пункт(2):-ПС,подсчет_членов(член(_,_,_),_Число),
          ВЫВОД('Количество членов клуба = '),
          ВЫВОД(_Число),ПС,!.
пункт(3):-ПС,ВЫВОД('Введите данные нового члена клуба'),ПС,
          ВЫВОД('Фамилия'),readatom(_Фамилия),
          ВЫВОД('Возраст'),read(_Возраст),
          ВЫВОД('Отметка об уплате взноса'),readatom(_Данные_об_уплате),
          пополнить_состав(член(_Фамилия,_Возраст,_Данные_об_уплате)),!.
пункт(_Х):-ВЫВОД('Такой пункт неопределен!'),ПС,!.

% Запустите программу (Alt+@,Alt+$,Alt+&)
&?-меню.                         
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Сохраните текст программы под новым именем.
% Добавте пункты удаления члена клуба и внесения отметки об
% уплате взноса (обратите внимание, что для этого необходимо
% ввести фамилию и возраст члена клуба). А  также   удаления 
% неплательщиков.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Самостоятельно напишите базу данных "Классный журнал",
% содержащую информацию о сроках и результатах сдачи 
% экзаменов школьниками по трем предметам: математике, 
% физике и информатике. Напишите меню для работы с ней.
% Ваша программа должна предоставлять возможность добавлять
% записи о сдаче, пересдаче экзаменов; получения ведомости;
% получения списка неуспевающих; операции отчисления и т.д.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Конец Урока 9.
% Загрузите файл PR10.PRO (Урок 10).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
