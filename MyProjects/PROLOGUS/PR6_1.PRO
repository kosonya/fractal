% ЭЛЕКТРОННЫЙ  ЗАДАЧНИК  ПО  ЛОГИЧЕСКОМУ  ПРОГРАММИРОВАНИЮ.
% Версия 1.0 для системы PROLOGUS
%
%                   Copyright (С) 1993  Боголюбов Д.П. (МИЭМ).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%               У Р О К    6
%        Рекурсия с обратным ходом
%               Ч А С Т Ь 1       
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Рекурсия является очень мощным средством при решении 
% различных задач на Прологе.
% Рассмотрим задачу нахождения факториала некоторого 
% целого неотрицательного числа.
%
%    По определению,
%            0! = 1     (Факториал нуля есть единица)
%            1! = 1
%            2! = 1 x 2
%            3! = 1 x 2 x 3
%               .  .  .
%            n! = 1 x 2 x 3 x ... x n
%
% Заметим, что n! = (n-1)! x n
% То есть для того, чтобы найти факториал некоторого числа  n, 
% необходимо найти факториал от предыдущего числа, а затем полученное
% значение умножить на данное n.

  факториал(0,1)   :- !.
  факториал(_n,_x) :- _k=ВЫЧ(_n-1),
                      факториал(_k,_y),
                      _x=ВЫЧ(_n*_y).
                      
% Условием выхода из рекурсии в данном случае является первое
% равенство: 0!=1.
%  
% Рассмотрим дерево вывода ответа на вопрос:

@  ?-факториал(3,_f).
  
%               ?- факториал(3,_f).
%      ┌──<1<───────────┴───>2>───────<17<──┐             │^ 17:_f <-> _x = 6
%     ─┼─                             факториал(_n,_x)    │^
% факториал(0,1)                      факториал(3,_х)     │^
%                         ╔<3<══════════════╩══>16>═╗     │^ 16: _x <-> 2 x 3 
%                  факториал(3-1,_y)            _x=_y x 3 │^
%            ┌─<4<────────┴─>5>───<15<┐                   │^ 15: _y <-> _x = 2   
%           ─┼─                 факториал(_n,_x)          │^
%      факториал(0,1)           факториал(2,_х)           │^
%                        ╔═<6<════════╩══>14>═╗           │^ 14: _x <-> 1 x 2
%                 факториал(2-1,_y)       _x = _y x 2     │^
%        ┌<7<────────────┴─>8>───<13<┐                    │^ 13: _y <-> _x = 1 
%       ─┼─                   факториал(_n,_x)            │^
%   факториал(0,1)            факториал(1,_х)             │^
%                       ╔<9<═════════╩═══>12>╗            │^ 12: _x <-> 1 x 1
%                факториал(1-1,_y)        _x = _y x 1     │^
%      ┌─<10<───────────┴─ ─ ─>11>─ ─┐                    │^ 10: _y <-> 1
% факториал(0,1)              факториал(_n,_х)            │^
%      ║                                                  │^
%      !                                                  │^
%                                                         │ обратный ход
%
% До десятого шага все происходит точно так же, как и в 
% предыдущих примерах. На этом шаге переменной _у сопоставилось 
% значение 1. Предикат факториал(1-1,_у) получил истинное значение.
% После этого начинается так называемый "обратный ход", то есть
% перемещение по дереву производится в обратном направлении
% (снизу вверх,слева направо). Например, для доказательства 
% истинности факториал(1,_х), мы перемещаемся вправо (шаг 12) и 
% вычисляем значение _х. Затем на шаге 13 истинное значение получает
% факториал(2-1,_у) и так далее, пока не дойдем до вершины дерева,
% то есть до   факториал(0,1). Рекурсия на обратном ходе не каждом
% шаге показана справа от дерева. 
% ---------------------------------------------------------------
% Задайте вопрос:

& ?-факториал(_X,6).

% Каков ответ? Почему?
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Самостоятельное задание:
%
% Напишите программу для определения n-го числа Фибонначи.
%
% Числа Фибонначи определяются следующим законом: первые два
% числа равны единице, а каждое последующее равно сумме двух 
% предыдущих. То есть получим ряд 1,1,2,3,5,8,13,21,34,...
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  Конец  Части 1 Урока 6.
%  Загрузите файл  PR6_2.PRO ( Часть 2 Урока 6)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

